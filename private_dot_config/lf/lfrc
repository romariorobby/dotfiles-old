set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set drawbox
set icons
set period 1
set info size
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"

$lf -remote "send $id set previewer ${XDG_CONFIG_HOME:-$HOME/.config}/lf/scope"
# Basic

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

cmd paste &{{
    load=$(lf -remote 'load')
    mode=$(echo "$load" | sed -n '1p')
    list=$(echo "$load" | sed '1d')
    if [ $mode = 'copy' ]; then
        rsync -av --ignore-existing --progress $list . \
        | stdbuf -i0 -o0 -e0 tr '\r' '\n' \
        | while read line; do
            lf -remote "send $id echo $line"
        done
    elif [ $mode = 'move' ]; then
        mv -n $list .
    fi
    lf -remote 'send load'
    lf -remote 'send clear'
}}

cmd open ${{
    case $(file --mime-type $f -b) in
	image/vnd.djvu|application/pdf|application/octet-stream) setsid -f zathura $fx >/dev/null 2>&1 ;;
        text/*) $EDITOR $fx;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" | sxiv -aio 2>/dev/null | lf-select ;;
	audio/*) mpv --audio-display=no $f ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

cmd moveto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|' )" &&
	for x in $fx; do
		eval mv -iv \"$x\" \"$dest\"
	done &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd chwall ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "change to this wallpaper?[y/N]"
	read ans
	[ $ans = "y" ] && setbg "$fx"
}}
cmd bulkrename $vidir
cmd ext ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract archieve?"
	read ans
	[ $ans = "y" ] && ext "$fx"
}}
# BINDING
# - Basic
map <c-n> push :mkdir<space>
map M moveto
map D delete
map P paste
map x cut
map . set hidden!
map u clear
map U unselect
map <c-r> reload
map R reload
map <c-o> ext
# dedicated keys for file opener actions. you need "perl-file-mimeinfo"
map o &mimeopen $f
map O $mimeopen --ask $f

# - Extras
# mouse scroll
map <c-e> down
map <c-y> up
# --
map B chwall
map V push :!nvim<space>
map <c-f> $lf -remote "send $id select '$(fzf)'"
map J $lf -remote "send $id cd $(cut -d'	' -f2 ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf)"
map o &mimeopen $f
map O $mimeopen --ask $f
# unmap
map r
# Rename 
map rA rename # at very end
map rb bulkrename
map ra push rA<a-b> # after extension
map rc push rA<c-u> # New Rename
map rI push rA<c-a> # at very beginning
map ri push rA<a-b><a-b><a-f> # before extentions
# Directory
#map gm cd ~/media/
#map gmd cd ~/media/documents
#map gd cd ~/downloads
#map gma cd ~/media/audio
#map gam cd ~/media/audio/music
#map gap cd ~/media/audio/podcast
#map gmi cd ~/media/images
#map gmv cd ~/media/videos
#map gvy cd ~/media/videos/youtube
#map gml cd ~/media/literatures
#map glb cd ~/media/literatures/books
#map gms cd ~/media/software
#map gmi cd ~/media/images
#map gip cd ~/media/images/pictures
#map giw cd ~/media/images/wallpaper
#map gis cd ~/media/images/screenshots/
#map gdc cd ~/.local/share/chezmoi
