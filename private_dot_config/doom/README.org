#+TITLE: My Emacs Configurations
#+AUTHOR: Romario
#+PROPERTY: header-args :tangle config.el

* Table Of Content :toc:
- [[#functions][Functions]]
- [[#user-configuration][User Configuration]]
- [[#org][Org]]
- [[#basic-binding][Basic Binding]]
- [[#deft][Deft]]
- [[#org-roam][Org-Roam]]
- [[#elcord][Elcord]]
- [[#org-journal][Org-Journal]]

* Functions
:PROPERTIES:
:ID:       76f82ba7-380d-45ee-8001-f18005c76776
:END:
#+begin_src haskell
;;(defun mario/org-mode-visual()
;;  (setq visual-fill-column-width 100
;;        visual-fill-column-center-text t
;;        display-fill-column-indicator nil
;;        display-line-numbers nil)
;;  (visual-fill-column-mode 1))
#+end_src
* User Configuration
:PROPERTIES:
:ID:       83c9656c-624b-47d6-b8e4-b76110cb3661
:END:
#+begin_src haskell
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

(setq doom-theme 'mario-gruvbox
      doom-scratch-initial-major-mode 'org-mode
      doom-font (font-spec :family "SF Mono" :size 15)
      doom-variable-pitch-font (font-spec :family "ETbb" :size 24)
      doom-serif-font (font-spec :family "ETbb" :size 24)
      fancy-splash-image (concat doom-private-dir "splash.png")
      display-line-numbers-type nil
      evil-split-window-below t     ; Switch to            after splitting
      evil-vsplit-window-right t)
(setq-default major-mode 'org-mode)
(map! "<backtab>" #'doom/toggle-line-numbers)
(setq user-full-name "Romario"
      user-mail-address "romario@com")
;; Show battery mode if on laptop
(unless (equal "Battery Status not available"
               (battery))
  (display-battery-mode 1))
;; hide dashboard shortmenu
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-shortmenu)
;; hide highlight line
(remove-hook 'doom-first-buffer-hook #'global-hl-line-mode)
;; (if (eq initial-window-system 'x) ;; if started by emacs command or desktop file
;;     (toggle-frame-maximized)
;;   (toggle-frame-fullscreen))
#+end_src
* Org
:PROPERTIES:
:ID:       d0dc96dc-ce10-465d-86c3-ee8feeb5c885
:END:
#+begin_src haskell
(setq org-directory "~/Dropbox/org/"
      org-hide-emphasis-markers t
      org-ellipsis " ï„‡ " ;; folding symbol
      ;; org-bullets-bullet-list '(" ") ;; no bullets, needs org-bullets package
      org-archive-location (concat org-directory ".archive/%s::"))

(after! org
  (require 'org-habit)
  (map! :leader
        "c" #'org-capture)
  (map! :map org-mode-map
        "M-n" #'outline-next-visible-heading
        "M-p" #'outline-previous-visible-heading)
  (custom-set-faces!
    '(org-document-title
      :weight normal
      :foreground "#fabd2f"
      :height 1.5
      :family "ETbb")
    '(org-link
      :weight normal
      :foreground "#83a598"
      :underline t
      :height 1.0)
    '(org-ellipsis
      :weight extra-bold
      :foreground "#8ec07c"
      :height 1.0)
    '(org-document-info
      :weight normal
      :foreground "#fabd2f"
      :height 1.5
      :family "ETbb")
      :family "ETbb"
      :foreground "#d79921"
      :weight extra-bold
      :height 1.3)
    '(org-level-3
      :inherit outline-3
      :foreground "#d79921"
      :family "ETbb"
      :weight semi-bold
      :height 1.25)
    '(org-level-4
      :inherit outline-4
      :family "ETbb"
      :foreground "#d79921"
      :weight semi-bold
      :height 1.20)
    '(org-level-5
      :inherit outline-5
      :family "ETbb"
      :foreground "#d79921"
      :weight bold
      :height 1.15)
    '(org-level-6
      :inherit outline-6
      :family "ETbb"
      :foreground "#d79921"
      :weight bold
      :height 1.1)
    '(org-level-7
      :inherit outline-7
      :weight bold)
    '(org-level-8
      :inherit outline-8
      :weight bold
      :foreground "#ebdbb2")
    '(org-default
      :foreground "#ebdbb2")
    ;; :PROPERTIES: COLOr
    '(org-property-value
      :foreground "#b8bb26")
    ;; ensure that anything should be fixed-pitch in org buffers that way
    '(org-block nil :foreground nil :inherit 'fixed-pitch)
    ;; for meta line starting with #+
    '(org-meta-line
      :inherit font-lock-comment-face
      :foreground "#b8bb26")
    '(org-code nil :inherit '(shadow fixed-pitch))
    '(org-table nil :inherit '(shadow fixed-pitch))
    '(org-verbatim nil :inherit '(shadow fixed-pitch))
    '(org-special-keyword nil :inherit '(font-lock-comment-face fixed-pitch))
    '(org-meta-line nil :inherit '(font-lock-comment-face fixed-pitch))
    '(org-checkbox nil :inherit 'fixed-pitch)))
#+end_src
* Basic Binding
:PROPERTIES:
:ID:       1e3d7ac8-d5f8-4669-bf48-ccdb650f8a76
:END:
#+begin_src haskell
(map! :leader
       "h h" #'evil-window-left
       "j j" #'evil-window-down
       "l l" #'evil-window-right
       "v" #'evil-window-vsplit
       "s s" #'evil-window-split
       "k k" #'evil-window-up)
#+end_src
* Deft
:PROPERTIES:
:ID:       468289f9-3a06-41f0-9fab-e06c60936af0
:END:
#+begin_src haskell
(setq deft-directory "~/Dropbox/org/"
      deft-use-filter-string-for-filename t
      deft-default-extension "org"
      deft-recursive t)
#+end_src
* Org-Roam
:PROPERTIES:
:ID:       fabef71c-df1a-4bef-9482-1fef8f189565
:END:
#+begin_src haskell
(use-package! org-roam
  ;; :commands (org-roam-insert ))
  :hook
  (after-init . org-roam-mode)
  :init
  (map! :leader
        :prefix "n"
        :desc "org-roam" "l" #'org-roam
        :desc "org-roam-find-file" "f" #'org-roam-find-file
        :desc "org-roam-insert" "i" #'org-roam-insert
        :desc "org-roam-server-mode" "z" #'org-roam-server-mode
        :desc "org-roam-switch-to-buffer" "b" #'org-roam-switch-to-buffer
        :desc "org-roam-graph" "g" #'org-roam-graph
        :desc "org-roam-capture" "c" #'org-roam-capture
        :desc "org-roam-dailies-capture-today" "j" #'org-roam-dailies-capture-today)
  (setq org-roam-directory (file-truename "~/Dropbox/org/")
        org-roam-graph-viewer "/usr/bin/brave"
        org-roam-db-gc-threshold most-positive-fixnum
        ;; org-roam-graph-exclude-matcher "private"
        org-roam-tag '(prop last-directory)
        org-id-link-to-org-use-id t)
  :config
  (setq org-roam-dailies-directory "private/")
  (setq org-roam-capture-templates
        '(("d" "default" plain (function org-roam-capture--get-point)
           "%?"
           :file-name "${slug}"
           :head "#+TITLE: ${title}
,#+title: ${title}\n"
           :immediate-finish t
           :unnarrowed t)
          ("p" "private" plain (function org-roam-capture--get-point)
           "%?"
           :file-name "private/${slug}"
           :head "#+TITLE: ${title}
,#+title: ${title}\n"
           :immediate-finish t
           :unnarrowed t)))
  (setq org-roam-capture-ref-templates
        '(("r" "ref" plain (function org-roam-capture--get-point)
           "%?"
           :file-name "resonance/${slug}"
           :head "#+TITLE:${title}
,#+title: ${title}
,#+roam_key: ${ref}
,#+roam_tags: bpmcinbox

- source :: ${ref}
- tags :: [[file:../../org/bpmc.org][BPMC]]"
           :unnarrowed t)))
  (setq org-roam-dailies-capture-templates
        '(("d" "daily" plain (function org-roam-capture--get-point)
           ""
           :file-name "private/%<%Y-%m-%d>"
           :head "#+TITLE: %<%A, %d %B %Y>
- [ ]
- [ ]
- [ ]\n* Time Tracking\n"
           :immediate-finish t)))
  (set-company-backend! 'org-mode '(company-capf)))

(use-package! org-roam-protocol
  :after org-protocol)
#+end_src

* Elcord
:PROPERTIES:
:ID:       ad03c092-ae65-4302-8951-1c8b78055228
:END:
Discord Presence for emacs
#+begin_src haskell
;; (setq elcord-display-buffer-details nil)
;; (elcord-mode t)
#+end_src
* Org-Journal
:PROPERTIES:
:ID:       6bc84ab8-9967-49b9-a337-ace8ca8ce3f8
:END:
Journalling for emacs
#+begin_src haskell
(after! org-journal
  (setq org-journal-date-prefix "#+TITLE: "
        org-journal-file-format "%Y-%m-%d.org"
        org-journal-time-format "%I:%M%p"
        org-journal-date-format "%A, %d %B %Y"
        org-journal-dir  "~/Dropbox/org/private/"
        org-journal-enable-agenda-integration t))
#+end_src
